name: Create new release
on: workflow_dispatch
defaults:
  run:
    shell: pwsh

jobs:
  build:
    name: Windows release
    runs-on: windows-latest
    concurrency: staging_environment
    outputs:
      changes: ${{ steps.changelog.outputs.discord_changes }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Preparing
        run: |
          $DateWithoutDot = Get-Date -Format 'yyyyMMdd'
          $charNumber = 64
          do {
            $char = [char]$charNumber
            if ($charNumber -eq 64) {
              $ReleaseTag = $DateWithoutDot
            }
            else {
              $ReleaseTag = $DateWithoutDot + $char.ToString().ToLower()
            }
            $charNumber++
          }
          while (git tag -l $ReleaseTag)
          $TodayDate = (Get-Date -Format 'yyyy.MM.dd') + $char.ToString().ToLower()
          "RELEASE_NAME=Pricone UI EN DMM v$TodayDate" >> $Env:GITHUB_ENV
          "RELEASE_TAG=$ReleaseTag" >> $Env:GITHUB_ENV

          Write-Output "::group::Logs"
          Write-Output "Release Name: Pricone UI EN DMM v$TodayDate"
          Write-Output "Tag: $ReleaseTag"
          Write-Output "::endgroup::"

      - name: Generating changelog
        id: changelog
        run: |
          Write-Output "Logs:"
          Write-Output "Latest tag: $(git describe --tags --abbrev=0)"

          $ChangedFiles = git diff --find-renames --name-status (git describe --tags --abbrev=0)
          Write-Output "::group::Changed Files"
          Write-Output $ChangedFiles
          Write-Output "::endgroup::"

          $TextChange = ""
          $TextureChanges = ""
          $ConfigChanges = ""

          Write-Output "::group::Convertion"
          foreach ($file in $ChangedFiles) {
              $FileWStatus = $file.Split("`t")
              if ($file -match "Translation/.+" -and $file -notmatch ".+_AutoGeneratedTranslations.txt$") {
                  switch -Wildcard ($FileWStatus[0]) {
                      "A*" {
                          $Log = "- Added "
                          $FileName = $FileWStatus[1]
                      }
                      "M*" {
                          $Log = "- Updated "
                          $FileName = $FileWStatus[1]
                      }
                      "R*" {
                          $Log = "- Updated "
                          $FileName = $FileWStatus[2]
                      }
                      "D*" {
                          $Log = "- Deleted "
                          $FileName = $FileWStatus[1]
                      }
                  }
                  $Splitted = $FileName.Split("/")
                  if ("Text" -in $Splitted) {
                      if ( $Splitted[4] ) {
                          $Log += $Splitted[3] + ": " + (Split-Path -LeafBase $FileName) + "`n"
                      }
                      else {
                          $Log += (Split-Path -LeafBase $FileName) + "`n"
                      }
                      $TextChange += $Log
                  }
                  else {
                      $Name = $Splitted[3] + ": " + $Splitted[4].Split(" ")[0] + "`n"
                      if ( $FileWStatus[0] -eq "D" ) {
                          $TextureChange = $TextureChange.Replace("- Added $Name","- Updated $Name")
                          $ChangedFiles = $ChangedFiles.Replace("A`t$($FileWStatus[1])", "M`t$($FileWStatus[1])")
                          Write-Output "$file`n=> Updated Texture"
                      }
                      else {
                          $Log += $Name
                          $TextureChange += $Log
                          Write-Output "$file`n=>$Log"
                      }
                  }
              }
              elseif ($file -match ".+config/.+") {
                  $ConfigChanges += "- Updated $(Split-Path -LeafBase $FileWStatus[1])`n"
              }
          }
          Write-Output "::endgroup::"
          
          $TextureChange = "- Updated many, many textures' name`n"

          Write-Output "::group::Final Changelog and Discord Notification message"
          "changes<<EOF" >> "$env:GITHUB_OUTPUT"
          "`n#Download`n" >> "$env:GITHUB_OUTPUT"
          "Choose a version:`n" >> "$env:GITHUB_OUTPUT"
          "|[Normal](https://github.com/ImaterialC/PriconeTL/releases/download/${{ env.RELEASE_TAG }}/PriconneTL_${{ env.RELEASE_TAG }}.zip)|[Textureless](https://github.com/ImaterialC/PriconeTL/releases/download/${{ env.RELEASE_TAG }}/PriconneTL_${{ env.RELEASE_TAG }}_Textureless.zip)`n|-|-|" >> "$env:GITHUB_OUTPUT"
          "`n# Changelog`n" >> "$env:GITHUB_OUTPUT"
          if ($TextChange) {
              "## Text `n$TextChange`n" >> "$env:GITHUB_OUTPUT"
          }
          if ($TextureChange) {
              "## Texture `n$TextureChange" >> "$env:GITHUB_OUTPUT"
          }
          if ($ConfigChanges) {
              "## Other `n$ConfigChanges" >> "$env:GITHUB_OUTPUT"
          }
          "EOF" >> "$env:GITHUB_OUTPUT"

          "discord_changes<<EOF" >> "$env:GITHUB_OUTPUT"
          "**Changelog**" >> "$env:GITHUB_OUTPUT"
          if ($TextChange) {
              "`nText:`n$($TextChange.replace("-", "> •"))`n" >> "$env:GITHUB_OUTPUT"
          }
          if ($TextureChange) {
              "`nTexture:`n$($TextureChange.replace("-", "> •"))" >> "$env:GITHUB_OUTPUT"
          }
          if ($ConfigChanges) {
              "`nOther: `n$($ConfigChanges.replace("-", "> •"))" >> "$env:GITHUB_OUTPUT"
          }
          "EOF" >> "$env:GITHUB_OUTPUT"

          Write-Output "## Text: `n$TextChange`n## Texture: `n$TextureChange## Other: `n$ConfigChanges"
          Write-Output "::endgroup::"

      - name: Generating version files
        run: |
          Write-Output "Creating release folder..."
          New-Item -ItemType Directory -Force -Path "newrelease"
          Write-Output "Version: ${{ env.RELEASE_TAG }}"
          "${{ env.RELEASE_TAG }}" | Out-File -FilePath "newrelease/Version.txt" -Encoding utf8

      - name: Downloading core files
        run: |
          try {
            Invoke-WebRequest -URI "https://github.com/BepInEx/BepInEx/releases/download/v5.4.21/BepInEx_x86_5.4.21.0.zip" -OutFile "BepInEx.zip"
            Expand-Archive -Path "BepInEx.zip" -DestinationPath "newrelease"
            Invoke-WebRequest -URI "https://github.com/bbepis/XUnity.AutoTranslator/releases/download/v5.2.0/XUnity.AutoTranslator-BepInEx-5.2.0.zip" -OutFile "AutoTrans.zip"
            Expand-Archive -Path "AutoTrans.zip" -DestinationPath "newrelease"
            Invoke-WebRequest -URI "https://github.com/FineBrewDev/BepInEx.FullScreenizer/releases/download/1.0/FullScreenizer.dll" -OutFile "./newrelease/BepInEx/plugins/FullScreenizer.dll"
            Invoke-WebRequest -URI "https://github.com/priconnEnjoyer/XUnity.AutoTranslator/releases/latest/download/XUnity.AutoTranslator.Plugin.Core.dll" -OutFile "./newrelease/BepInEx/plugins/XUnity.AutoTranslator/XUnity.AutoTranslator.Plugin.Core.dll"
            Invoke-WebRequest -URI "https://github.com/priconnEnjoyer/XUnity.AutoTranslator/releases/latest/download/XUnity.Common.dll" -OutFile "./newrelease/BepInEx/core/XUnity.Common.dll"
          }
          catch {
            Write-Output "::error $_"
            exit
          }

      - name: Generating artifact (Textureless)
        run: |
          Copy-Item "config" -Destination "newrelease/BepInEx" -Recurse
          Write-Output "Copied config into newrelease"
          Copy-Item "Translation/en/Text" -Destination "newrelease/BepInEx/Translation/en/Text" -Recurse
          Write-Output "Copied Text into newrelease"
          Compress-Archive -Path "newrelease/*" -DestinationPath 'PriconneTL_${{ env.RELEASE_TAG }}_Textureless.zip'
          Write-Output "Compressed artifact from newrelease: PriconneTL_${{ env.RELEASE_TAG }}_Textureless.zip"

      - name: Generating artifact (Normal)
        run: |
          Copy-Item "Translation/en/Texture"  -Destination "newrelease/BepInEx/Translation/en/Texture" -Recurse
          Write-Output "Copied Texture into newrelease"
          Compress-Archive -Path "newrelease/*" -DestinationPath 'PriconneTL_${{ env.RELEASE_TAG }}.zip'
          Write-Output "Compressed artifact from newrelease: PriconneTL_${{ env.RELEASE_TAG }}.zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: "PriconneTL*.zip"

      - name: Publish Release
        uses: ncipollo/release-action@v1
        with:
          makeLatest: true
          name: ${{ env.RELEASE_NAME }}
          body: ${{ steps.changelog.outputs.changes }}
          tag: ${{ env.RELEASE_TAG }}
          artifacts: |
            "./PriconneTL_${{ env.RELEASE_TAG }}.zip"
            "./PriconneTL_${{ env.RELEASE_TAG }}_Textureless.zip"

  announce:
    name: Discord Announcement
    runs-on: ubuntu-latest
    concurrency: staging_environment
    needs: build
    steps:
      - name: Announcing new release
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@0c4b27844ba47cb1c7bee539c8eead5284ce9fa9
        with:
          args: "<@&1082514350700515348> Aruji-sama, look like there is a new update dropped, why don't we check it out?\n${{ needs.build.outputs.changes }}\n"
