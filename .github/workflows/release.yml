name: Create new release
on: workflow_dispatch
defaults:
  run:
    shell: pwsh

jobs:
  build:
    name: Windows release
    runs-on: windows-latest
    concurrency: staging_environment
    outputs:
      changes: ${{ steps.changelog.outputs.changes }}
    steps:
      - uses: actions/checkout@v3

      - name: Preparing
        run: |
          $ReleaseTag = Get-Date -Format 'yyyyMMdd'
          $charNumber = 64
          while (git tag -l $ReleaseTag) {
              $charNumber++
              $char = [char]$charNumber
              $ReleaseTag = $ReleaseTag + $char
          }
          $TodayDate = (Get-Date -Format 'yyyy.MM.dd') + $char
          Write-Output "RELEASE_NAME=Pricone UI EN DMM v$TodayDate" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          Write-Output "RELEASE_TAG=$ReleaseTag" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          New-Item -ItemType Directory -Force -Path "newrelease"

      - name: Downloading core files
        run: |
          Invoke-WebRequest -URI "https://github.com/BepInEx/BepInEx/releases/download/v5.4.21/BepInEx_x86_5.4.21.0.zip" -OutFile "BepInEx.zip"
          Expand-Archive -Path "BepInEx.zip" -DestinationPath "newrelease"
          Invoke-WebRequest -URI "https://github.com/bbepis/XUnity.AutoTranslator/releases/download/v5.2.0/XUnity.AutoTranslator-BepInEx-5.2.0.zip" -OutFile "AutoTrans.zip"
          Expand-Archive -Path "AutoTrans.zip" -DestinationPath "newrelease"
          Invoke-WebRequest -URI "https://github.com/FineBrewDev/BepInEx.FullScreenizer/releases/download/1.0/FullScreenizer.dll" -OutFile "./newrelease/BepInEx/plugins/FullScreenizer.dll"

      - name: Getting patch files
        run: |
          Remove-Item -Path "Translation\en\Text\_AutoGeneratedTranslations.txt"
          Copy-Item "Translation"  -Destination "newrelease/BepInEx" -Recurse
          Copy-Item "config" -Destination "newrelease/BepInEx" -Recurse
          Copy-Item "plugins" -Destination "newrelease/BepInEx" -Recurse -ErrorAction SilentlyContinue

      - name: Generating version files
        run: |
          "${{ env.TODAY_DATE }}" | Out-File -FilePath "newrelease/Version.txt" -Encoding utf8

      - name: Generating changelog
        id: changelog
        run: |
          $ChangedFiles = git diff --name-status 20230216
          $TextChange = "`n## Text `n"
          $TextureChange = "`n## Texture `n"

          foreach ($file in $ChangedFiles) {
              if ($file -match ".+Translation/.+" -and $file -notmatch "_AutoGeneratedTranslations.txt$") {
                  $FileWStatus = $file.Split("`t")
                  $SplittedFileName = $FileWStatus.Split("/")
                  switch ($FileWStatus[0]) {
                      "A" {
                          $Log = "- Added "
                      }
                      { $_ -eq "M" -or $_ -eq "R" } {
                          $Log = "- Updated "
                      }
                      "D" {
                          $Log = "- Deleted "
                      }
                  }
                            
                  if ("Text" -in $SplittedFileName) {
                      if ( $SplittedFileName[5] ) {
                          $Log += $SplittedFileName[4] + ": " + $SplittedFileName[5].Replace(".txt", "") + "`n"
                      }
                      else {
                          $Log += $SplittedFileName[4].Replace(".txt", "") + "`n"
                      }
                      $TextChange += $Log
                  }
                  else {
                      if ( $FileWStatus[0] -ne "D" ) {
                          $Log += ($SplittedFileName[5].Split(" "))[0] + "`n"
                          $TextureChange += $Log
                      }
                  }
              }
          }
          $Changelog = "`n# Changelog" + $TextChange + $TextureChange
          Write-Output "changes=$Changelog" >> "$GITHUB_OUTPUT"

      - name: Generating artifact
        run: |
          Compress-Archive -Path "newrelease/*" -CompressionLevel Fastest -DestinationPath 'PriconneTL_${{ env.TODAY_DATE }}.zip'

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: release
          path: "PriconneTL_${{ env.TODAY_DATE }}.zip"

      - name: Publish Release
        uses: ncipollo/release-action@v1
        with:
          makeLatest: true
          name: ${{ env.RELEASE_NAME }}
          body: ${{ steps.changelog.outputs.changes }}
          tag: ${{ env.RELEASE_TAG }}
          artifacts: "./PriconneTL_${{ env.TODAY_DATE }}.zip"

  announce:
    name: Discord Announcement
    runs-on: ubuntu-latest
    concurrency: staging_environment
    needs: build
    steps:
      - name: Announcing new release
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@0c4b27844ba47cb1c7bee539c8eead5284ce9fa9
        with:
          args: "<@&967698392870436874> Aruji-sama, look like there is a new update dropped, why don't we check it out?`n"
